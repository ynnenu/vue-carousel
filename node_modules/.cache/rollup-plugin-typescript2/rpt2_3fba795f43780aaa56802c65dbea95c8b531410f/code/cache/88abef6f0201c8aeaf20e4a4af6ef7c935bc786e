{"code":"import { defineComponent, inject, ref, computed, h, reactive } from 'vue';\r\nimport { defaultConfigs } from '@/partials/defaults';\r\nexport default defineComponent({\r\n    name: 'CarouselSlide',\r\n    props: {\r\n        index: {\r\n            type: Number,\r\n            default: 1,\r\n        },\r\n        isClone: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n    },\r\n    setup(props, { slots }) {\r\n        const config = inject('config', reactive(Object.assign({}, defaultConfigs)));\r\n        const currentSlide = inject('currentSlide', ref(0));\r\n        const slidesToScroll = inject('slidesToScroll', ref(0));\r\n        const slideWidth = inject('slideWidth', ref(0));\r\n        const isSliding = inject('isSliding', ref(false));\r\n        const slideStyle = computed(() => ({\r\n            width: slideWidth.value ? `${slideWidth.value}px` : `100%`,\r\n        }));\r\n        const isActive = () => props.index === currentSlide.value;\r\n        const isPrev = () => props.index === currentSlide.value - 1;\r\n        const isNext = () => props.index === currentSlide.value + 1;\r\n        const isVisible = () => {\r\n            const min = Math.floor(slidesToScroll.value);\r\n            const max = Math.ceil(slidesToScroll.value + config.itemsToShow - 1);\r\n            return props.index >= min && props.index <= max;\r\n        };\r\n        return () => {\r\n            var _a;\r\n            return h('li', {\r\n                style: slideStyle.value,\r\n                class: {\r\n                    carousel__slide: true,\r\n                    'carousel_slide--clone': props.isClone,\r\n                    'carousel__slide--visible': isVisible(),\r\n                    'carousel__slide--active': isActive(),\r\n                    'carousel__slide--prev': isPrev(),\r\n                    'carousel__slide--next': isNext(),\r\n                    'carousel__slide--sliding': isSliding.value,\r\n                },\r\n                'aria-hidden': !isVisible(),\r\n            }, (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots));\r\n        };\r\n    },\r\n});\r\n","references":["/Users/I560079/Documents/vue-carousel/node_modules/vue/dist/vue.d.ts","/Users/I560079/Documents/vue-carousel/src/partials/defaults.ts","/Users/I560079/Documents/vue-carousel/src/types/index.ts"],"dts":{"name":"/Users/I560079/Documents/vue-carousel/dist/dts/components/Slide.d.ts","writeByteOrderMark":false,"text":"declare const _default: import(\"vue\").DefineComponent<{\r\n    index: {\r\n        type: NumberConstructor;\r\n        default: number;\r\n    };\r\n    isClone: {\r\n        type: BooleanConstructor;\r\n        default: boolean;\r\n    };\r\n}, () => import(\"vue\").VNode<import(\"vue\").RendererNode, import(\"vue\").RendererElement, {\r\n    [key: string]: any;\r\n}>, unknown, {}, {}, import(\"vue\").ComponentOptionsMixin, import(\"vue\").ComponentOptionsMixin, {}, string, import(\"vue\").VNodeProps & import(\"vue\").AllowedComponentProps & import(\"vue\").ComponentCustomProps, Readonly<import(\"vue\").ExtractPropTypes<{\r\n    index: {\r\n        type: NumberConstructor;\r\n        default: number;\r\n    };\r\n    isClone: {\r\n        type: BooleanConstructor;\r\n        default: boolean;\r\n    };\r\n}>>, {\r\n    index: number;\r\n    isClone: boolean;\r\n}>;\r\nexport default _default;\r\n"}}
